def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def secrets = new Properties()
def secretsPropertiesFile = new File(rootProject.projectDir, "secrets.properties")
if (secretsPropertiesFile.isFile()) {
    secretsPropertiesFile.withReader("UTF-8") { reader -> secrets.load(reader) }
} else {
    assert System.getenv('GPR_USER')
    assert System.getenv('GPR_TOKEN')
    assert System.getenv('D4L_CLIENT_ID')
    assert System.getenv('D4L_CLIENT_SECRET')
    secrets.setProperty("gpr.user", System.getenv('GPR_USER'))
    secrets.setProperty("gpr.token", System.getenv('GPR_TOKEN'))
    secrets.setProperty("d4l.clientId", System.getenv('D4L_CLIENT_ID'))
    secrets.setProperty("d4l.clientSecret", System.getenv('D4L_CLIENT_SECRET'))
}

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "de.hpi.pharme"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        manifestPlaceholders += [
                platform      : "s4h",
                environment   : "staging",
                clientId      : secrets.getProperty("d4l.clientId"),
                clientSecret  : secrets.getProperty("d4l.clientSecret"),
                redirectScheme: "eu.smart4health.7cf2befc-a010-4290-996c-a94426b5ce65",
                debug         : "false"
        ]
    }

    buildTypes {

        debug {
            matchingFallbacks = ["release", "debug"]
        }

        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation "care.data4life.hc-sdk-kmp:sdk-android:1.15.1"
    implementation "care.data4life.hc-fhir-sdk-java:fhir-java:1.6.2"
    implementation "com.jakewharton.threetenabp:threetenabp:1.4.0"
}
